/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2021 SAP SE. All rights reserved
 */
sap.ui.define(["sap/ui/base/BindingParser"], function (BindingParser) {
  "use strict";

  var _exports = {};

  function getObject(oObject, sPath) {
    if (!oObject) {
      return null;
    }

    var sPathSplit = sPath.split("/");

    if (sPathSplit.length === 1) {
      return oObject[sPath];
    } else {
      return getObject(oObject[sPathSplit[0]], sPathSplit.splice(1).join("/"));
    }
  }
  /**
   * Resolve a dynamic annotation path down to a standard annotation path.
   *
   * @param sAnnotationPath
   * @param oMetaModel
   * @returns The non dynamic version of the annotation path
   */


  function resolveDynamicExpression(sAnnotationPath, oMetaModel) {
    if (sAnnotationPath.indexOf("[") !== -1) {
      var firstBracket = sAnnotationPath.indexOf("[");
      var sStableBracket = sAnnotationPath.substr(0, firstBracket);
      var sRest = sAnnotationPath.substr(firstBracket + 1);
      var lastBracket = sRest.indexOf("]");
      var aValue = oMetaModel.getObject(sStableBracket);
      var oExpression = BindingParser.parseExpression(sRest.substr(0, lastBracket));

      if (Array.isArray(aValue) && oExpression && oExpression.result && oExpression.result.parts && oExpression.result.parts[0] && oExpression.result.parts[0].path) {
        var i;
        var bFound = false;

        for (i = 0; i < aValue.length && !bFound; i++) {
          var oObjectValue = getObject(aValue[i], oExpression.result.parts[0].path);
          var bResult = oExpression.result.formatter(oObjectValue);

          if (bResult) {
            bFound = true;
          }
        }

        if (bFound) {
          sAnnotationPath = resolveDynamicExpression(sStableBracket + (i - 1) + sRest.substr(lastBracket + 1), oMetaModel);
        }
      }
    }

    return sAnnotationPath;
  }

  _exports.resolveDynamicExpression = resolveDynamicExpression;
  return _exports;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRPYmplY3QiLCJvT2JqZWN0Iiwic1BhdGgiLCJzUGF0aFNwbGl0Iiwic3BsaXQiLCJsZW5ndGgiLCJzcGxpY2UiLCJqb2luIiwicmVzb2x2ZUR5bmFtaWNFeHByZXNzaW9uIiwic0Fubm90YXRpb25QYXRoIiwib01ldGFNb2RlbCIsImluZGV4T2YiLCJmaXJzdEJyYWNrZXQiLCJzU3RhYmxlQnJhY2tldCIsInN1YnN0ciIsInNSZXN0IiwibGFzdEJyYWNrZXQiLCJhVmFsdWUiLCJvRXhwcmVzc2lvbiIsIkJpbmRpbmdQYXJzZXIiLCJwYXJzZUV4cHJlc3Npb24iLCJBcnJheSIsImlzQXJyYXkiLCJyZXN1bHQiLCJwYXJ0cyIsInBhdGgiLCJpIiwiYkZvdW5kIiwib09iamVjdFZhbHVlIiwiYlJlc3VsdCIsImZvcm1hdHRlciJdLCJzb3VyY2VSb290IjoiLiIsInNvdXJjZXMiOlsiRHluYW1pY0Fubm90YXRpb25QYXRoSGVscGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCaW5kaW5nUGFyc2VyIGZyb20gXCJzYXAvdWkvYmFzZS9CaW5kaW5nUGFyc2VyXCI7XG5cbmZ1bmN0aW9uIGdldE9iamVjdChvT2JqZWN0OiBhbnksIHNQYXRoOiBhbnkpOiBhbnkge1xuXHRpZiAoIW9PYmplY3QpIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXHRjb25zdCBzUGF0aFNwbGl0ID0gc1BhdGguc3BsaXQoXCIvXCIpO1xuXHRpZiAoc1BhdGhTcGxpdC5sZW5ndGggPT09IDEpIHtcblx0XHRyZXR1cm4gb09iamVjdFtzUGF0aF07XG5cdH0gZWxzZSB7XG5cdFx0cmV0dXJuIGdldE9iamVjdChvT2JqZWN0W3NQYXRoU3BsaXRbMF1dLCBzUGF0aFNwbGl0LnNwbGljZSgxKS5qb2luKFwiL1wiKSk7XG5cdH1cbn1cbi8qKlxuICogUmVzb2x2ZSBhIGR5bmFtaWMgYW5ub3RhdGlvbiBwYXRoIGRvd24gdG8gYSBzdGFuZGFyZCBhbm5vdGF0aW9uIHBhdGguXG4gKlxuICogQHBhcmFtIHNBbm5vdGF0aW9uUGF0aFxuICogQHBhcmFtIG9NZXRhTW9kZWxcbiAqIEByZXR1cm5zIFRoZSBub24gZHluYW1pYyB2ZXJzaW9uIG9mIHRoZSBhbm5vdGF0aW9uIHBhdGhcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVEeW5hbWljRXhwcmVzc2lvbihzQW5ub3RhdGlvblBhdGg6IGFueSwgb01ldGFNb2RlbDogYW55KSB7XG5cdGlmIChzQW5ub3RhdGlvblBhdGguaW5kZXhPZihcIltcIikgIT09IC0xKSB7XG5cdFx0Y29uc3QgZmlyc3RCcmFja2V0ID0gc0Fubm90YXRpb25QYXRoLmluZGV4T2YoXCJbXCIpO1xuXHRcdGNvbnN0IHNTdGFibGVCcmFja2V0ID0gc0Fubm90YXRpb25QYXRoLnN1YnN0cigwLCBmaXJzdEJyYWNrZXQpO1xuXHRcdGNvbnN0IHNSZXN0ID0gc0Fubm90YXRpb25QYXRoLnN1YnN0cihmaXJzdEJyYWNrZXQgKyAxKTtcblx0XHRjb25zdCBsYXN0QnJhY2tldCA9IHNSZXN0LmluZGV4T2YoXCJdXCIpO1xuXHRcdGNvbnN0IGFWYWx1ZSA9IG9NZXRhTW9kZWwuZ2V0T2JqZWN0KHNTdGFibGVCcmFja2V0KTtcblx0XHRjb25zdCBvRXhwcmVzc2lvbiA9IEJpbmRpbmdQYXJzZXIucGFyc2VFeHByZXNzaW9uKHNSZXN0LnN1YnN0cigwLCBsYXN0QnJhY2tldCkpO1xuXHRcdGlmIChcblx0XHRcdEFycmF5LmlzQXJyYXkoYVZhbHVlKSAmJlxuXHRcdFx0b0V4cHJlc3Npb24gJiZcblx0XHRcdG9FeHByZXNzaW9uLnJlc3VsdCAmJlxuXHRcdFx0b0V4cHJlc3Npb24ucmVzdWx0LnBhcnRzICYmXG5cdFx0XHRvRXhwcmVzc2lvbi5yZXN1bHQucGFydHNbMF0gJiZcblx0XHRcdG9FeHByZXNzaW9uLnJlc3VsdC5wYXJ0c1swXS5wYXRoXG5cdFx0KSB7XG5cdFx0XHRsZXQgaTtcblx0XHRcdGxldCBiRm91bmQgPSBmYWxzZTtcblx0XHRcdGZvciAoaSA9IDA7IGkgPCBhVmFsdWUubGVuZ3RoICYmICFiRm91bmQ7IGkrKykge1xuXHRcdFx0XHRjb25zdCBvT2JqZWN0VmFsdWUgPSBnZXRPYmplY3QoYVZhbHVlW2ldLCBvRXhwcmVzc2lvbi5yZXN1bHQucGFydHNbMF0ucGF0aCk7XG5cdFx0XHRcdGNvbnN0IGJSZXN1bHQgPSBvRXhwcmVzc2lvbi5yZXN1bHQuZm9ybWF0dGVyKG9PYmplY3RWYWx1ZSk7XG5cdFx0XHRcdGlmIChiUmVzdWx0KSB7XG5cdFx0XHRcdFx0YkZvdW5kID0gdHJ1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0aWYgKGJGb3VuZCkge1xuXHRcdFx0XHRzQW5ub3RhdGlvblBhdGggPSByZXNvbHZlRHluYW1pY0V4cHJlc3Npb24oc1N0YWJsZUJyYWNrZXQgKyAoaSAtIDEpICsgc1Jlc3Quc3Vic3RyKGxhc3RCcmFja2V0ICsgMSksIG9NZXRhTW9kZWwpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHRyZXR1cm4gc0Fubm90YXRpb25QYXRoO1xufVxuIl0sIm1hcHBpbmdzIjoiO0FBQUE7QUFBQTtBQUFBOzs7Ozs7RUFFQSxTQUFTQSxTQUFULENBQW1CQyxPQUFuQixFQUFpQ0MsS0FBakMsRUFBa0Q7SUFDakQsSUFBSSxDQUFDRCxPQUFMLEVBQWM7TUFDYixPQUFPLElBQVA7SUFDQTs7SUFDRCxJQUFNRSxVQUFVLEdBQUdELEtBQUssQ0FBQ0UsS0FBTixDQUFZLEdBQVosQ0FBbkI7O0lBQ0EsSUFBSUQsVUFBVSxDQUFDRSxNQUFYLEtBQXNCLENBQTFCLEVBQTZCO01BQzVCLE9BQU9KLE9BQU8sQ0FBQ0MsS0FBRCxDQUFkO0lBQ0EsQ0FGRCxNQUVPO01BQ04sT0FBT0YsU0FBUyxDQUFDQyxPQUFPLENBQUNFLFVBQVUsQ0FBQyxDQUFELENBQVgsQ0FBUixFQUF5QkEsVUFBVSxDQUFDRyxNQUFYLENBQWtCLENBQWxCLEVBQXFCQyxJQUFyQixDQUEwQixHQUExQixDQUF6QixDQUFoQjtJQUNBO0VBQ0Q7RUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0VBQ08sU0FBU0Msd0JBQVQsQ0FBa0NDLGVBQWxDLEVBQXdEQyxVQUF4RCxFQUF5RTtJQUMvRSxJQUFJRCxlQUFlLENBQUNFLE9BQWhCLENBQXdCLEdBQXhCLE1BQWlDLENBQUMsQ0FBdEMsRUFBeUM7TUFDeEMsSUFBTUMsWUFBWSxHQUFHSCxlQUFlLENBQUNFLE9BQWhCLENBQXdCLEdBQXhCLENBQXJCO01BQ0EsSUFBTUUsY0FBYyxHQUFHSixlQUFlLENBQUNLLE1BQWhCLENBQXVCLENBQXZCLEVBQTBCRixZQUExQixDQUF2QjtNQUNBLElBQU1HLEtBQUssR0FBR04sZUFBZSxDQUFDSyxNQUFoQixDQUF1QkYsWUFBWSxHQUFHLENBQXRDLENBQWQ7TUFDQSxJQUFNSSxXQUFXLEdBQUdELEtBQUssQ0FBQ0osT0FBTixDQUFjLEdBQWQsQ0FBcEI7TUFDQSxJQUFNTSxNQUFNLEdBQUdQLFVBQVUsQ0FBQ1YsU0FBWCxDQUFxQmEsY0FBckIsQ0FBZjtNQUNBLElBQU1LLFdBQVcsR0FBR0MsYUFBYSxDQUFDQyxlQUFkLENBQThCTCxLQUFLLENBQUNELE1BQU4sQ0FBYSxDQUFiLEVBQWdCRSxXQUFoQixDQUE5QixDQUFwQjs7TUFDQSxJQUNDSyxLQUFLLENBQUNDLE9BQU4sQ0FBY0wsTUFBZCxLQUNBQyxXQURBLElBRUFBLFdBQVcsQ0FBQ0ssTUFGWixJQUdBTCxXQUFXLENBQUNLLE1BQVosQ0FBbUJDLEtBSG5CLElBSUFOLFdBQVcsQ0FBQ0ssTUFBWixDQUFtQkMsS0FBbkIsQ0FBeUIsQ0FBekIsQ0FKQSxJQUtBTixXQUFXLENBQUNLLE1BQVosQ0FBbUJDLEtBQW5CLENBQXlCLENBQXpCLEVBQTRCQyxJQU43QixFQU9FO1FBQ0QsSUFBSUMsQ0FBSjtRQUNBLElBQUlDLE1BQU0sR0FBRyxLQUFiOztRQUNBLEtBQUtELENBQUMsR0FBRyxDQUFULEVBQVlBLENBQUMsR0FBR1QsTUFBTSxDQUFDWixNQUFYLElBQXFCLENBQUNzQixNQUFsQyxFQUEwQ0QsQ0FBQyxFQUEzQyxFQUErQztVQUM5QyxJQUFNRSxZQUFZLEdBQUc1QixTQUFTLENBQUNpQixNQUFNLENBQUNTLENBQUQsQ0FBUCxFQUFZUixXQUFXLENBQUNLLE1BQVosQ0FBbUJDLEtBQW5CLENBQXlCLENBQXpCLEVBQTRCQyxJQUF4QyxDQUE5QjtVQUNBLElBQU1JLE9BQU8sR0FBR1gsV0FBVyxDQUFDSyxNQUFaLENBQW1CTyxTQUFuQixDQUE2QkYsWUFBN0IsQ0FBaEI7O1VBQ0EsSUFBSUMsT0FBSixFQUFhO1lBQ1pGLE1BQU0sR0FBRyxJQUFUO1VBQ0E7UUFDRDs7UUFDRCxJQUFJQSxNQUFKLEVBQVk7VUFDWGxCLGVBQWUsR0FBR0Qsd0JBQXdCLENBQUNLLGNBQWMsSUFBSWEsQ0FBQyxHQUFHLENBQVIsQ0FBZCxHQUEyQlgsS0FBSyxDQUFDRCxNQUFOLENBQWFFLFdBQVcsR0FBRyxDQUEzQixDQUE1QixFQUEyRE4sVUFBM0QsQ0FBMUM7UUFDQTtNQUNEO0lBQ0Q7O0lBQ0QsT0FBT0QsZUFBUDtFQUNBIn0=